[{"/home/dima/Desktop/test1/demo/src/reportWebVitals.js":"1","/home/dima/Desktop/test1/demo/src/page/Login/Login.js":"2","/home/dima/Desktop/test1/demo/src/components/ui/Container/Container.js":"3","/home/dima/Desktop/test1/demo/src/containers/Routes/Routes.js":"4","/home/dima/Desktop/test1/demo/src/page/SignUp/SignUp.jsx":"5","/home/dima/Desktop/test1/demo/src/store.js":"6","/home/dima/Desktop/test1/demo/src/page/Login/loginSaga.js":"7","/home/dima/Desktop/test1/demo/src/rootSaga.js":"8","/home/dima/Desktop/test1/demo/src/rootReducer.js":"9","/home/dima/Desktop/test1/demo/src/requests/login.js":"10","/home/dima/Desktop/test1/demo/src/requests/services.js":"11","/home/dima/Desktop/test1/demo/src/config.js":"12","/home/dima/Desktop/test1/demo/src/page/SignUp/registrationReducer.js":"13","/home/dima/Desktop/test1/demo/src/requests/registration.js":"14","/home/dima/Desktop/test1/demo/src/page/SignUp/registrationSaga.js":"15","/home/dima/Desktop/test1/demo/src/page/Login/loginReducer.js":"16","/home/dima/Desktop/test1/demo/src/components/PrivateRoute/PrivateRoute.js":"17","/home/dima/Desktop/test1/demo/src/page/Account/Account.jsx":"18","/home/dima/Desktop/test1/demo/src/index.tsx":"19","/home/dima/Desktop/test1/demo/src/containers/App.tsx":"20","/home/dima/Desktop/test1/demo/src/hooks/useDarkMode/useDarkMode.ts":"21","/home/dima/Desktop/test1/demo/src/theme/theme.ts":"22","/home/dima/Desktop/test1/demo/src/containers/Header/Header.tsx":"23"},{"size":364,"mtime":1613161535046,"results":"24","hashOfConfig":"25"},{"size":2729,"mtime":1613161534842,"results":"26","hashOfConfig":"25"},{"size":167,"mtime":1612723878205,"results":"27","hashOfConfig":"25"},{"size":475,"mtime":1613161534682,"results":"28","hashOfConfig":"25"},{"size":3558,"mtime":1613161535026,"results":"29","hashOfConfig":"25"},{"size":466,"mtime":1613161535298,"results":"30","hashOfConfig":"25"},{"size":726,"mtime":1613161534898,"results":"31","hashOfConfig":"25"},{"size":284,"mtime":1613161535230,"results":"32","hashOfConfig":"25"},{"size":241,"mtime":1612893738545,"results":"33","hashOfConfig":"25"},{"size":293,"mtime":1613161535058,"results":"34","hashOfConfig":"25"},{"size":4690,"mtime":1613161535186,"results":"35","hashOfConfig":"25"},{"size":112,"mtime":1613161534510,"results":"36","hashOfConfig":"25"},{"size":662,"mtime":1613161534950,"results":"37","hashOfConfig":"25"},{"size":271,"mtime":1612896194642,"results":"38","hashOfConfig":"25"},{"size":610,"mtime":1613161534982,"results":"39","hashOfConfig":"25"},{"size":756,"mtime":1613158092841,"results":"40","hashOfConfig":"25"},{"size":532,"mtime":1613169893334,"results":"41","hashOfConfig":"25"},{"size":105,"mtime":1613161534778,"results":"42","hashOfConfig":"25"},{"size":625,"mtime":1613162563495,"results":"43","hashOfConfig":"25"},{"size":766,"mtime":1613165071928,"results":"44","hashOfConfig":"25"},{"size":544,"mtime":1613164938196,"results":"45","hashOfConfig":"25"},{"size":131,"mtime":1613163426503,"results":"46","hashOfConfig":"25"},{"size":3664,"mtime":1613166024221,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2le2ak",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"103","usedDeprecatedRules":"91"},"/home/dima/Desktop/test1/demo/src/reportWebVitals.js",[],["104","105"],"/home/dima/Desktop/test1/demo/src/page/Login/Login.js",["106"],"import React from 'react';\nimport Container from 'components/ui/Container/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { loginRequest } from 'page/Login/loginReducer';\n\nconst useStyles = makeStyles((theme) => ({\n  loginPage: {\n    marginTop: '120px',\n  },\n\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const loginHandler = (e) => {\n    e.preventDefault();\n\n    const { email, password } = e.target;\n\n    const data = { email: email.value, password: password.value };\n\n    const { from } = location.state || { from: { pathname: '/' } };\n    dispatch(loginRequest({ data, from }));\n  };\n  const { from } = location;\n  console.log(location);\n  return (\n    <Container maxWidth='xs' className={classes.loginPage}>\n      <Typography component='h1' variant='h5'>\n        Login\n      </Typography>\n      <form onSubmit={loginHandler}>\n        <TextField\n          label='Email'\n          placeholder='Email'\n          margin='normal'\n          name='email'\n          fullWidth\n          variant='outlined'\n          autoFocus\n        />\n        <TextField\n          label='Password'\n          placeholder='Password'\n          margin='normal'\n          name='password'\n          fullWidth\n          variant='outlined'\n        />\n\n        <FormControlLabel control={<Checkbox value='remember' color='primary' />} label='Remember me' />\n        <Button type='submit' className={classes.submit} fullWidth variant='contained' color='primary' size='large'>\n          Submit\n        </Button>\n\n        <Grid container>\n          <Grid item xs>\n            <Link component={RouterLink} className={classes.navLink} to='/forgot-password' variant='body2'>\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link component={RouterLink} className={classes.navLink} to='/register' variant='body2'>\n              {' '}\n              Don't have an account? Sign Up\n            </Link>\n          </Grid>\n        </Grid>\n      </form>{' '}\n    </Container>\n  );\n}\n","/home/dima/Desktop/test1/demo/src/components/ui/Container/Container.js",[],"/home/dima/Desktop/test1/demo/src/containers/Routes/Routes.js",[],"/home/dima/Desktop/test1/demo/src/page/SignUp/SignUp.jsx",[],"/home/dima/Desktop/test1/demo/src/store.js",[],"/home/dima/Desktop/test1/demo/src/page/Login/loginSaga.js",["107"],"import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { loginRequest, loginRequestSuccess, loginRequestError } from 'page/Login/loginReducer';\nimport { loginApi } from 'requests/login';\n\nimport store from 'store2';\n\nexport function* login(action) {\n  try {\n    console.log('saga');\n    const { data, from } = action.payload;\n    const response = yield call(loginApi, data);\n\n    const auth = {\n      user: response.data.user,\n      token: response.data.token,\n    };\n\n    store.set('auth', auth);\n\n    yield put(loginRequestSuccess(response.data.user));\n  } catch (error) {\n    yield put(loginRequestError(error?.response?.data?.errors));\n  }\n}\n\nexport default all([takeLatest(loginRequest().type, login)]);\n","/home/dima/Desktop/test1/demo/src/rootSaga.js",[],"/home/dima/Desktop/test1/demo/src/rootReducer.js",[],"/home/dima/Desktop/test1/demo/src/requests/login.js",[],"/home/dima/Desktop/test1/demo/src/requests/services.js",[],"/home/dima/Desktop/test1/demo/src/config.js",[],"/home/dima/Desktop/test1/demo/src/page/SignUp/registrationReducer.js",[],"/home/dima/Desktop/test1/demo/src/requests/registration.js",[],"/home/dima/Desktop/test1/demo/src/page/SignUp/registrationSaga.js",["108","109","110","111"],"import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  registrationRequest,\n  registrationRequestSuccess,\n  registrationRequestFail,\n} from 'page/SignUp/registrationReducer';\nimport { registrationApi } from 'requests/registration';\n\nimport store from 'store2';\n\nexport function* registration(action) {\n  try {\n    const response = yield call(registrationApi, action.payload);\n    console.log('Registered');\n    yield registrationRequestFail();\n  } catch (e) {\n    yield registrationRequestFail(e.message);\n  }\n}\n\nexport default all([takeLatest(registrationRequest().type, registration)]);\n","/home/dima/Desktop/test1/demo/src/page/Login/loginReducer.js",["112"],"import { createSlice } from '@reduxjs/toolkit';\n\nlet auth = JSON.parse(localStorage.getItem('auth'));\nconst initialState = auth\n  ? { loggedIn: true, user: auth.user, loading: false }\n  : { loggedIn: false, user: null, loading: false };\n\nconst counterSlice = createSlice({\n  name: 'signIn',\n  initialState: initialState,\n  reducers: {\n    loginRequest: (state) => {\n      state.loading = true;\n    },\n    loginRequestSuccess: (state, action) => {\n      state.loggedIn = true;\n      state.user = action.payload;\n      state.loading = false;\n    },\n    loginRequestError: (state) => {\n      state = state;\n    },\n  },\n});\n\nexport const { reducer } = counterSlice;\nexport const { loginRequest, loginRequestSuccess, loginRequestError } = counterSlice.actions;\n","/home/dima/Desktop/test1/demo/src/components/PrivateRoute/PrivateRoute.js",["113"],"/home/dima/Desktop/test1/demo/src/page/Account/Account.jsx",[],"/home/dima/Desktop/test1/demo/src/index.tsx",[],["114","115"],"/home/dima/Desktop/test1/demo/src/containers/App.tsx",["116","117"],"import React from 'react';\nimport Header from 'containers/Header';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Routes from './Routes/Routes';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport useDarkMode from 'hooks/useDarkMode';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport './App.css';\n\nfunction App() {\n  const { theme, toggleDarkMode } = useDarkMode();\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <ThemeProvider theme={themeConfig}>\n      <Router>\n        <CssBaseline />\n\n        <Header toggleDarkMode={toggleDarkMode} />\n\n        <Routes />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/dima/Desktop/test1/demo/src/hooks/useDarkMode/useDarkMode.ts",["118","119","120","121","122"],"import React, { useState } from 'react';\nimport { themeObject } from 'theme/theme';\nimport {ThemeOptions} from '@material-ui/core'\n\nexport default function useDarkMode() {\n  const [theme, setTheme] = useState<ThemeOptions >(themeObject);\n\n  const {\n    palette\n  } = theme;\n\n  const toggleDarkMode = () => {\n    const updatedTheme: any = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: palette?.type === 'light' ? 'dark' : 'light',\n      },\n    };\n    setTheme(updatedTheme);\n  };\n  return {theme, toggleDarkMode};\n}\n","/home/dima/Desktop/test1/demo/src/theme/theme.ts",["123","124"],"import {ThemeOptions} from '@material-ui/core'\n\nexport const themeObject :ThemeOptions = {\n  palette: {\n    type: 'light',\n  },\n};\n","/home/dima/Desktop/test1/demo/src/containers/Header/Header.tsx",["125","126","127","128","129","130"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'components/ui/Container';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { useSelector } from 'react-redux';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    navLink: {\n      color: 'red',\n    },\n    themeToggle:{\n      marginLeft: 0\n    }\n  })\n);\n\ninterface HeaderProps {\n  toggleDarkMode: () => void;\n}\n\nexport default function Header({ toggleDarkMode }: HeaderProps) {\n  const classes = useStyles();\n\n  let history = useHistory();\n\n  const { loggedIn } = useSelector((state: any) => state.signIn);\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const accountHandler = () => {\n    handleClose();\n    history.push('/account');\n  };\n\n  const logOutHandler = () => {\n    handleClose();\n  };\n\n  return (\n    <AppBar position='static'>\n      <Container maxWidth='lg'>\n        <Toolbar>\n          <IconButton edge='start' className={classes.menuButton} color='inherit' aria-label='menu'>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            News\n          </Typography>\n\n          {loggedIn ? (\n            <div>\n              <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={accountHandler}>My account</MenuItem>\n                <MenuItem>\n                  <FormControlLabel className={classes.themeToggle} control={<Switch onClick={toggleDarkMode} />} label={`Toggle Dark Mode`} labelPlacement=\"start\" />\n                </MenuItem>\n                <MenuItem onClick={logOutHandler}>Logout</MenuItem>\n              </Menu>\n            </div>\n          ) : (\n            <Link component={RouterLink} className={classes.navLink} to='/login'>\n              Login\n            </Link>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":45,"column":11,"nodeType":"137","messageId":"138","endLine":45,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":10,"column":19,"nodeType":"137","messageId":"138","endLine":10,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":1,"column":15,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"135","severity":1,"message":"140","line":4,"column":3,"nodeType":"137","messageId":"138","endLine":4,"endColumn":29},{"ruleId":"135","severity":1,"message":"141","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":13},{"ruleId":"135","severity":1,"message":"142","line":13,"column":11,"nodeType":"137","messageId":"138","endLine":13,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":21,"column":15,"nodeType":"137","messageId":"145","endLine":21,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":17,"column":10,"nodeType":null,"endLine":17,"endColumn":10,"fix":"148"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"149","severity":1,"message":"150","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":16},{"ruleId":"149","severity":1,"message":"151","line":8,"column":18,"nodeType":"137","messageId":"138","endLine":8,"endColumn":34},{"ruleId":"149","severity":1,"message":"152","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":3,"column":9,"nodeType":null,"endLine":3,"endColumn":47,"fix":"154"},{"ruleId":"146","severity":1,"message":"155","line":6,"column":50,"nodeType":null,"endLine":6,"endColumn":51,"fix":"156"},{"ruleId":"146","severity":1,"message":"157","line":8,"column":10,"nodeType":null,"endLine":10,"endColumn":2,"fix":"158"},{"ruleId":"146","severity":1,"message":"159","line":22,"column":11,"nodeType":null,"endLine":22,"endColumn":32,"fix":"160"},{"ruleId":"146","severity":1,"message":"153","line":1,"column":9,"nodeType":null,"endLine":1,"endColumn":47,"fix":"161"},{"ruleId":"146","severity":1,"message":"162","line":3,"column":25,"nodeType":null,"endLine":3,"endColumn":27,"fix":"163"},{"ruleId":"149","severity":1,"message":"164","line":5,"column":36,"nodeType":"137","messageId":"138","endLine":5,"endColumn":41},{"ruleId":"149","severity":1,"message":"165","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":14},{"ruleId":"146","severity":1,"message":"166","line":33,"column":17,"nodeType":null,"endLine":33,"endColumn":17,"fix":"167"},{"ruleId":"146","severity":1,"message":"168","line":34,"column":20,"nodeType":null,"endLine":34,"endColumn":20,"fix":"169"},{"ruleId":"146","severity":1,"message":"168","line":35,"column":6,"nodeType":null,"endLine":35,"endColumn":6,"fix":"170"},{"ruleId":"146","severity":1,"message":"171","line":110,"column":36,"nodeType":null,"endLine":110,"endColumn":164,"fix":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'from' is assigned a value but never used.","Identifier","unusedVar","'put' is defined but never used.","'registrationRequestSuccess' is defined but never used.","'store' is defined but never used.","'response' is assigned a value but never used.","no-self-assign","'state' is assigned to itself.","selfAssignment","prettier/prettier","Insert `⏎······`",{"range":"175","text":"176"},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'React' is defined but never used.","Replace `ThemeOptions}·from·'@material-ui/core'` with `·ThemeOptions·}·from·'@material-ui/core';`",{"range":"177","text":"178"},"Delete `·`",{"range":"179","text":"180"},"Replace `⏎····palette⏎·` with `·palette`",{"range":"181","text":"182"},"Replace `theme,·toggleDarkMode` with `·theme,·toggleDarkMode·`",{"range":"183","text":"184"},{"range":"185","text":"178"},"Replace `·:` with `:·`",{"range":"186","text":"187"},"'Theme' is defined but never used.","'Button' is defined but never used.","Insert `·`",{"range":"188","text":"189"},"Insert `,`",{"range":"190","text":"191"},{"range":"192","text":"191"},"Replace `·className={classes.themeToggle}·control={<Switch·onClick={toggleDarkMode}·/>}·label={`Toggle·Dark·Mode`}·labelPlacement=\"start\"` with `⏎····················className={classes.themeToggle}⏎····················control={<Switch·onClick={toggleDarkMode}·/>}⏎····················label={`Toggle·Dark·Mode`}⏎····················labelPlacement='start'⏎·················`",{"range":"193","text":"194"},"no-global-assign","no-unsafe-negation",[515,515],"\n      ",[92,130]," ThemeOptions } from '@material-ui/core';",[221,222],"",[248,262]," palette",[518,539]," theme, toggleDarkMode ",[8,46],[72,74],": ",[1128,1128]," ",[1149,1149],",",[1155,1155],[3185,3313],"\n                    className={classes.themeToggle}\n                    control={<Switch onClick={toggleDarkMode} />}\n                    label={`Toggle Dark Mode`}\n                    labelPlacement='start'\n                 "]