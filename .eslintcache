[{"/home/dima/Desktop/test1/demo/src/reportWebVitals.js":"1","/home/dima/Desktop/test1/demo/src/index.js":"2","/home/dima/Desktop/test1/demo/src/containers/App.js":"3","/home/dima/Desktop/test1/demo/src/page/Login/Login.js":"4","/home/dima/Desktop/test1/demo/src/components/ui/Container/Container.js":"5","/home/dima/Desktop/test1/demo/src/containers/Routes/Routes.js":"6","/home/dima/Desktop/test1/demo/src/containers/Header/Header.js":"7","/home/dima/Desktop/test1/demo/src/theme/theme.js":"8","/home/dima/Desktop/test1/demo/src/hooks/useDarkMode/useDarkMode.js":"9","/home/dima/Desktop/test1/demo/src/page/SignUp/SignUp.jsx":"10"},{"size":362,"mtime":1609972171671,"results":"11","hashOfConfig":"12"},{"size":511,"mtime":1612711889107,"results":"13","hashOfConfig":"12"},{"size":2456,"mtime":1612793781635,"results":"14","hashOfConfig":"12"},{"size":2864,"mtime":1612795427101,"results":"15","hashOfConfig":"12"},{"size":167,"mtime":1612723878205,"results":"16","hashOfConfig":"12"},{"size":324,"mtime":1612795985024,"results":"17","hashOfConfig":"12"},{"size":1793,"mtime":1612795140966,"results":"18","hashOfConfig":"12"},{"size":70,"mtime":1612727902173,"results":"19","hashOfConfig":"12"},{"size":475,"mtime":1612726718179,"results":"20","hashOfConfig":"12"},{"size":3315,"mtime":1612796684477,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uve88s",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dima/Desktop/test1/demo/src/reportWebVitals.js",[],"/home/dima/Desktop/test1/demo/src/index.js",[],"/home/dima/Desktop/test1/demo/src/containers/App.js",["47","48","49","50","51","52"],"import React from 'react';\nimport Header from 'containers/Header';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Routes from './Routes/Routes';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { theme } from 'theme/theme';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport useDarkMode from 'hooks/useDarkMode';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport './App.css';\n\nconst baseUrl = 'http://localhost:5000/api/auth';\n\nfunction App() {\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    console.log(e.target.email.value);\n    const { email, password } = e.target;\n\n    const data = { email: email.value, password: password.value };\n\n    console.log(data);\n    try {\n      const response = await fetch(`${baseUrl}/register`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const json = await response.json();\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    console.log(e.target.email.value);\n    const { email, password } = e.target;\n\n    const data = { email: email.value, password: password.value };\n\n    try {\n      const response = await fetch(`${baseUrl}/login`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const json = await response.json();\n      console.log('Успех:', JSON.stringify(json));\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n\n  const [ theme, toggleDarkMode ] = useDarkMode();\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <ThemeProvider theme={themeConfig}>\n      <Router>\n        <CssBaseline />\n\n        <Header toggleDarkMode={toggleDarkMode} />\n\n        <Routes />\n      </Router>\n\n      {/* <form onSubmit={registerHandler}>\n        <input placeholder='Email' name='email' />\n        <input placeholder='Password' name='password' />\n        <button type='submit'>Submit</button>\n      </form>\n\n      <form onSubmit={loginHandler}>\n        <input placeholder='Email' name='email' />\n        <input placeholder='Password' name='password' />\n        <button type='submit'>Submit</button>\n      </form> */}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",["53","54"],"/home/dima/Desktop/test1/demo/src/page/Login/Login.js",[],"/home/dima/Desktop/test1/demo/src/components/ui/Container/Container.js",[],"/home/dima/Desktop/test1/demo/src/containers/Routes/Routes.js",[],["55","56"],"/home/dima/Desktop/test1/demo/src/containers/Header/Header.js",["57","58","59"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'components/ui/Container';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    navLink:{\n      color: 'red'\n    }\n  })\n);\n\nexport default function Header({ toggleDarkMode }) {\n  const classes = useStyles();\n\n  let history = useHistory();\n\n  const onLogin = () => {\n    history.push('/login');\n  };\n\n  return (\n    <AppBar position='static'>\n      <Container maxWidth='lg'>\n        <Toolbar>\n          <IconButton edge='start' className={classes.menuButton} color='inherit' aria-label='menu'>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            News\n          </Typography>\n          <FormControlLabel control={<Switch onClick={toggleDarkMode} label={`Toggle Dark Mode`} />} />\n          <Link component={RouterLink} className={classes.navLink} to=\"/login\">Login</Link>\n          {/* <Link component={RouterLink} className={classes.navLink} to=\"/login\">Login</Link> */}\n\n          \n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","/home/dima/Desktop/test1/demo/src/theme/theme.js",[],"/home/dima/Desktop/test1/demo/src/hooks/useDarkMode/useDarkMode.js",["60"],"import React, { useState } from 'react';\nimport { themeObject } from 'theme/theme';\n\nexport default function useDarkMode() {\n  const [ theme, setTheme ] = useState(themeObject);\n\n  const { palette: { type } } = theme;\n  const toggleDarkMode = () => {\n    const updatedTheme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: type === 'light' ? 'dark' : 'light',\n      },\n    };\n    setTheme(updatedTheme);\n  };\n  return [ theme, toggleDarkMode ];\n}\n","/home/dima/Desktop/test1/demo/src/page/SignUp/SignUp.jsx",[],{"ruleId":"61","severity":1,"message":"62","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":10,"column":18,"nodeType":"63","messageId":"64","endLine":10,"endColumn":34},{"ruleId":"61","severity":1,"message":"67","line":16,"column":9,"nodeType":"63","messageId":"64","endLine":16,"endColumn":24},{"ruleId":"61","severity":1,"message":"68","line":32,"column":13,"nodeType":"63","messageId":"64","endLine":32,"endColumn":17},{"ruleId":"61","severity":1,"message":"69","line":38,"column":9,"nodeType":"63","messageId":"64","endLine":38,"endColumn":21},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"61","severity":1,"message":"76","line":5,"column":36,"nodeType":"63","messageId":"64","endLine":5,"endColumn":41},{"ruleId":"61","severity":1,"message":"77","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":14},{"ruleId":"61","severity":1,"message":"78","line":37,"column":9,"nodeType":"63","messageId":"64","endLine":37,"endColumn":16},{"ruleId":"61","severity":1,"message":"79","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},"no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'registerHandler' is assigned a value but never used.","'json' is assigned a value but never used.","'loginHandler' is assigned a value but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"'Theme' is defined but never used.","'Button' is defined but never used.","'onLogin' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]